{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","messagesElements","messages","dialogItems","values","addMessage","newMessageText","compose","connect","state","Component","RedirectComponent","this","isAuth","React","auth"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,8FCOjKC,EALI,SAACC,GAAD,OACf,qBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,QAAjC,SACI,cAAC,IAAD,CAASC,GAAE,mBAAcL,EAAMM,IAA/B,SAAsCN,EAAMO,UCArCC,EAHC,SAACR,GAAD,OACZ,qBAAKC,UAAWC,IAAEO,QAAlB,SAA4BT,EAAMS,W,kDCKhCC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,EAfL,SAACb,GAAD,OACnB,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,yBAGpB,8BACI,yDAyBGC,EAnBC,SAACvB,GACb,IAAMwB,EAAkBxB,EAAMyB,YAAYC,QACrCC,KAAI,SAAAxB,GAAM,OAAI,cAAC,EAAD,CAAYG,GAAIH,EAAOG,GAAIC,KAAMJ,EAAOI,UACrDqB,EAAmB5B,EAAMyB,YAAYI,SACtCF,KAAI,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,aAI9C,OAAO,sBAAKR,UAAWC,IAAEwB,QAAlB,UACH,qBAAKzB,UAAWC,IAAE4B,YAAlB,SACKN,IAEL,sBAAKvB,UAAWC,IAAE2B,SAAlB,UACI,8BAAMD,IACN,cAAChB,EAAD,CAAqBG,SATP,SAACgB,GACnB/B,EAAMgC,WAAWD,EAAOE,0B,uDCtBjBC,sBACXC,aALoB,SAACC,GAAD,MAAY,CAChCX,YAAaW,EAAMX,eAMf,CACIO,kBCXoB,SAACK,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKvC,MAAMwC,OAET,cAACH,EAAD,eAAeE,KAAKvC,QADhB,cAAC,IAAD,CAAUK,GAAI,eAJU,GACXoC,IAAMJ,WAYtC,OAAOF,aAJiB,SAACC,GAAD,MAAY,CAChCI,OAAQJ,EAAMM,KAAKF,UAGhBL,CAAyBG,KDNrBJ,CAQbX","file":"static/js/4.dfc68718.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import s from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) =>\n    <div className={`${s.dialog} ${s.active}`}>\n        <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\n    </div>\n\nexport default DialogItem","import s from \"../Dialogs.module.css\";\n\nconst Message = (props) =>\n    <div className={s.message}>{props.message}</div>\n\nexport default Message","import s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCreator(50)\n\nconst AddMessageForm = (props) =>\n    <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field\n                component={Textarea}\n                validate={[required, maxLength50]}\n                name='newMessageText'\n                placeholder='Enter your message'\n            />\n        </div>\n        <div>\n            <button>Add message</button>\n        </div>\n    </form>\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm)\n\nconst Dialogs = (props) => {\n    const dialogsElements = props.dialogsPage.dialogs\n        .map(dialog => <DialogItem id={dialog.id} name={dialog.name}/>)\n    const messagesElements = props.dialogsPage.messages\n        .map(message => <Message message={message.message}/>)\n    const addNewMessage = (values) => {\n        props.addMessage(values.newMessageText)\n    }\n    return <div className={s.dialogs}>\n        <div className={s.dialogItems}>\n            {dialogsElements}\n        </div>\n        <div className={s.messages}>\n            <div>{messagesElements}</div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n    </div>\n}\n\nexport default Dialogs\n","import {addMessage} from \"../../redux/dialogsReducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport React from \"react\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => ({\n    dialogsPage: state.dialogsPage\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            addMessage\n        }\n    ),\n    withAuthRedirect\n)(Dialogs)\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth)\n                return <Redirect to={'/login'}/>\n            return <Component {...this.props} />\n        }\n    }\n\n    const mapStateToProps = (state) => ({\n        isAuth: state.auth.isAuth\n    })\n\n    return connect(mapStateToProps)(RedirectComponent)\n}\n\n"],"sourceRoot":""}