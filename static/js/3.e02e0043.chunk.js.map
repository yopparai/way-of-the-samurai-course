{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","message","likeCount","maxLength10","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElements","posts","map","post","likesCount","postBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.e02e0043.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3b6E0\",\"posts\":\"MyPosts_posts__3tZ1c\"};","import {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    return <div>\n        {!editMode && <div>\n            <span onDoubleClick={activateEditMode}>\n                {props.status || \"-----\"}\n            </span>\n        </div>}\n        {editMode && <div>\n            <input\n                onChange={onStatusChange}\n                autoFocus\n                onBlur={deactivateEditMode}\n                value={status}\n            />\n        </div>}\n    </div>\n}\n\nexport default ProfileStatusWithHooks\n","import s from './ProfileInfo.module.css'\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return <div>\n        <div className={s.descriptionBlock}>\n            <img src={profile.photos.large}/>\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n        </div>\n    </div>;\n}\n\nexport default ProfileInfo\n","import s from './Post.module.css'\n\nconst Post = (props) =>\n    <div className={s.item}>\n        <img src='https://www.meme-arsenal.com/memes/8ab5fe07681cd172915e9472a0a8443d.jpg'/>\n        {props.message}\n        <div>\n            <span>like</span>\n        </div>\n        <div>\n            <span>{props.likeCount} likes</span>\n        </div>\n    </div>\n\nexport default Post","import Post from \"./Post/Post\";\nimport s from './MyPosts.module.css'\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst AddPostForm = (props) =>\n    <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field\n                component={Textarea}\n                name='newPostText'\n                placeholder='Enter your message'\n                validate={[required, maxLength10]}\n            />\n        </div>\n        <div>\n            <button>Add post</button>\n        </div>\n    </form>\n\nconst AddPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddPostForm)\n\nconst MyPosts = (props) => {\n    const postsElements = props.posts\n        .map(post => <Post message={post.message} likeCount={post.likesCount}/>)\n    const addPost = (values) => {\n        props.addPost(values.newPostText)\n    }\n    return <div className={s.postBlock}>\n        <h3>My posts</h3>\n        <div>\n            <AddPostFormRedux onSubmit={addPost}/>\n        </div>\n        <div className={s.posts}>\n            {postsElements}\n        </div>\n    </div>;\n}\n\nexport default MyPosts\n","import {addPost} from \"../../../redux/profileReducer\";\nimport {connect} from \"react-redux\";\nimport MyPosts from \"./MyPosts\";\n\nconst mapStateToProps = (state) => ({\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n})\n\nconst MyPostsContainer = connect(\n    mapStateToProps,\n    {\n        addPost\n    }\n)(MyPosts)\n\nexport default MyPostsContainer\n","import s from './Profile.module.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) =>\n    <div className={s.content}>\n        <ProfileInfo\n            profile={props.profile}\n            status={props.status}\n            updateStatus={props.updateStatus}\n        />\n        <MyPostsContainer/>\n    </div>\n\nexport default Profile\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profileReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        const userId = this.props.match.params.userId ?? this.props.authorizedUserId\n        if (!userId)\n            this.props.history.push('/login')\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        return <Profile {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            getProfile,\n            getStatus,\n            updateStatus\n        }\n    ),\n    withRouter\n)(ProfileContainer)\n"],"sourceRoot":""}